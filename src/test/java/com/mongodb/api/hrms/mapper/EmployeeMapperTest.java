package com.mongodb.api.hrms.mapper;

import com.mongodb.api.hrms.dto.EmployeeDto;
import com.mongodb.api.hrms.model.Employee;
import com.mongodb.api.hrms.utils.TestDataUtils;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Configuration;
import org.springframework.test.context.junit.jupiter.SpringJUnitConfig;

import static org.junit.jupiter.api.Assertions.assertEquals;

// Use Spring's test context with a specific configuration class
@SpringJUnitConfig(EmployeeMapperTest.Config.class)
class EmployeeMapperTest {
    // Configuration class that tells Spring to scan for components in the same package as EmployeeMapper. This allows
    // Spring to detect and instantiate the mapper.
    @Configuration
    @ComponentScan(basePackageClasses = EmployeeMapper.class)
    static class Config {
        // No beans manually defined here â€” we rely on component scanning.
    }

    // Spring will inject the mapper implementation generated by MapStruct
    @Autowired
    EmployeeMapper employeeMapper;

    @Test
    void employeeDtoToEmployee() {
        String id = "682904c2ad128f5295905416";

        EmployeeDto source = TestDataUtils.createFullyPopulatedEmployeeDto(id);
        Employee target = TestDataUtils.createFullyPopulatedEmployee(id);

        Employee result = employeeMapper.employeeDtoToEmployee(source);

        assertEquals(target, result);
    }

    @Test
    void employeeToEmployeeDto() {
        String id = "682904c2ad128f5295905416";

        Employee source = TestDataUtils.createFullyPopulatedEmployee(id);
        EmployeeDto target = TestDataUtils.createFullyPopulatedEmployeeDto(id);

        EmployeeDto result = employeeMapper.employeeToEmployeeDto(source);

        assertEquals(target, result);
    }
}
